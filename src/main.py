import sys, os
from api import getQuestionDetail, getSolutions, getSolutionDetails
from llm import generateTestCases, extractSolutionCode

if len(sys.argv) < 2:
  print("Question slug is required")
  sys.exit(1)

slug = sys.argv[1]

def main():
  if os.path.exists(f'./problems/{slug}/solution_{slug.replace("-", "_")}.py'):
    print(f'Question {slug} already exists')
    return

  question = getQuestionDetail(slug)

  os.makedirs(f'./problems/{slug}', exist_ok=True)

  # Starting Sample

  starting_sample = f"""
# AUTOGENERATED WITH https://github.com/tsecret/leetcode

# URL: https://leetcode.com/problems/{slug}
# topics: {', '.join([tag['slug'] for tag in question['topicTags']])}


"""

  for codeSample in question['codeSnippets']:
    if codeSample['langSlug'] == 'python3':
      with open(f'./problems/{slug}/solution_{slug.replace("-", "_")}.py', "w") as f:
        if "List" in codeSample['code']:
          starting_sample += 'from typing import List\n\n'
        f.write(starting_sample + codeSample['code'])
      break

  print(f"Created solution file for {slug}")

  solutions = getSolutions(slug)
  solution = getSolutionDetails(solutions[0]['topicId'])

  print(f"Generating test cases for: {question['title']}")
  print(f"Problem slug: {slug}")

  solution_code = extractSolutionCode(solution)['solution_code']

  response = generateTestCases(question, solution_code)

  with open(f'./problems/{slug}/test_{slug.replace("-", "_")}.py', "w", encoding="utf-8") as f:
    f.write(response['test_cases'].encode('utf-8').decode('unicode_escape'))

  print(f"Created test files for {slug}")


if __name__ == '__main__':
  main()
