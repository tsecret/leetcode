
# AUTOGENERATED WITH https://github.com/tsecret/leetcode

# URL: https://leetcode.com/problems/top-k-frequent-elements
# topics: array, hash-table, divide-and-conquer, sorting, heap-priority-queue, bucket-sort, counting, quickselect

from typing import List
from collections import defaultdict

class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:

      d = defaultdict(int)
      l = [[] for _ in range(len(nums)+1)]
      ans = []

      for n in nums:
         d[n] += 1

      for key, freq in d.items():
         l[freq].append(key)

      for i in range(len(l)-1, 0, -1):
        if len(l[i]) == 0: continue

        for j in range(len(l[i])):
          ans.append(l[i][j])

          k -= 1
          if k <= 0:
            return ans
